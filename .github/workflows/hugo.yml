# SPDX-FileCopyrightText: 2006-2024 Knut Reinert & Freie Universität Berlin
# SPDX-FileCopyrightText: 2016-2024 Knut Reinert & MPI für molekulare Genetik
# SPDX-License-Identifier: CC0-1.0

name: Website

on:
  push:
    branches:
      - 'main'
  pull_request_target:
  workflow_dispatch:

concurrency:
  group: deploy
  cancel-in-progress: false

defaults:
  run:
    shell: bash -Eeuxo pipefail {0}

jobs:
  build:
    name: Deploy Website
    runs-on: ubuntu-latest
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Get latest Hugo version
        env:
          GH_TOKEN: ${{ github.token }}
        run: echo "HUGO_VERSION=$(gh api /repos/gohugoio/hugo/releases/latest -q .tag_name)" >> "${GITHUB_ENV}"

      - name: Install Hugo CLI
        run: |
          wget --quiet --retry-connrefused --output-document "${{ runner.temp }}/hugo.deb" "https://github.com/gohugoio/hugo/releases/download/${HUGO_VERSION}/hugo_extended_${HUGO_VERSION:1}_linux-amd64.deb"
          sudo dpkg -i "${{ runner.temp }}/hugo.deb"

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build
        working-directory: website
        env:
          HUGO_ENVIRONMENT: production
        run: |
          hugo --minify \
               --baseURL "https://docs.seqan.de/swp" \
               --destination "${GITHUB_WORKSPACE}/build"

      - name: Upload Report
        if: github.repository_owner != 'seqan' && github.event_name != 'pull_request_target'
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: build

      - name: Deploy Preview
        if: github.repository_owner == 'seqan' && github.event_name == 'pull_request_target'
        uses: seqan/actions/documentation_deploy_preview@main
        with:
          deploy_host: ${{ secrets.DEPLOY_HOST }}
          deploy_user: ${{ secrets.DEPLOY_USER }}
          deploy_ssh_key: ${{ secrets.DEPLOY_SSH_KEY }}
          deploy_base_path: ${{ secrets.DEPLOY_PREVIEW_BASE_PATH }}
          source_path_user_doc: build
          token: ${{ secrets.SEQAN_ACTIONS_PAT }}

      - name: Deploy Report
        if: github.repository_owner == 'seqan' && github.event_name != 'pull_request_target'
        uses: seqan/actions/documentation_deploy_production@main
        with:
          deploy_host: ${{ secrets.DEPLOY_HOST }}
          deploy_user: ${{ secrets.DEPLOY_USER }}
          deploy_ssh_key: ${{ secrets.DEPLOY_SSH_KEY }}
          source_path_user_doc: build/
          deploy_path_user_doc: ${{ secrets.DEPLOY_PRODUCTION_BASE_PATH }}

  delete:
      name: Delete Preview
      runs-on: ubuntu-latest
      if: github.repository_owner == 'seqan' && github.event_name == 'pull_request_target' && github.event.action == 'closed'
      steps:
      - name: Delete Preview
        uses: seqan/actions/documentation_delete_preview@main
        with:
          deploy_host: ${{ secrets.DEPLOY_HOST }}
          deploy_user: ${{ secrets.DEPLOY_USER }}
          deploy_ssh_key: ${{ secrets.DEPLOY_SSH_KEY }}
          deploy_base_path: ${{ secrets.DEPLOY_PREVIEW_BASE_PATH }}
